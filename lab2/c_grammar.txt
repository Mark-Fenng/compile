separator
:
grammar
source:translation_unit
primary_expression:IDENTIFIER
primary_expression:CONSTANT
primary_expression:STRING_LITERAL
primary_expression:L_PAREN expression R_PAREN

postfix_expression:primary_expression
postfix_expression:postfix_expression L_BRACK expression R_BRACK
postfix_expression:postfix_expression L_PAREN R_PAREN
postfix_expression:postfix_expression L_PAREN argument_expression_list R_PAREN
postfix_expression:postfix_expression DOT IDENTIFIER
postfix_expression:postfix_expression PTR_OP IDENTIFIER
postfix_expression:postfix_expression INC_OP
postfix_expression:postfix_expression DEC_OP

argument_expression_list:assignment_expression
argument_expression_list:argument_expression_list COMMA assignment_expression

unary_expression:postfix_expression
unary_expression:INC_OP unary_expression
unary_expression:DEC_OP unary_expression
unary_expression:unary_operator cast_expression
unary_expression:SIZEOF unary_expression
unary_expression:SIZEOF L_PAREN type_name R_PAREN

unary_operator:AND
unary_operator:MUL
unary_operator:ADD
unary_operator:SUB
unary_operator:B_NOT
unary_operator:NOT

cast_expression:unary_expression
cast_expression:L_PAREN type_name R_PAREN cast_expression

multiplicative_expression:cast_expression
multiplicative_expression:multiplicative_expression MUL cast_expression
multiplicative_expression:multiplicative_expression DIV cast_expression
multiplicative_expression:multiplicative_expression MOD cast_expression

additive_expression:multiplicative_expression
additive_expression:additive_expression ADD multiplicative_expression
additive_expression:additive_expression SUB multiplicative_expression

shift_expression:additive_expression
shift_expression:shift_expression LEFT_OP additive_expression
shift_expression:shift_expression RIGHT_OP additive_expression

relational_expression:shift_expression
relational_expression:relational_expression LT shift_expression
relational_expression:relational_expression GT shift_expression
relational_expression:relational_expression LE_OP shift_expression
relational_expression:relational_expression GE_OP shift_expression

equality_expression:relational_expression
equality_expression:equality_expression EQ_OP relational_expression
equality_expression:equality_expression NE_OP relational_expression

and_expression:equality_expression
and_expression:and_expression AND equality_expression

exclusive_or_expression:and_expression
exclusive_or_expression:exclusive_or_expression XOR and_expression

inclusive_or_expression:exclusive_or_expression
inclusive_or_expression:inclusive_or_expression OR exclusive_or_expression

logical_and_expression:inclusive_or_expression
logical_and_expression:logical_and_expression AND_OP inclusive_or_expression

logical_or_expression:logical_and_expression
logical_or_expression:logical_or_expression OR_OP logical_and_expression

conditional_expression:logical_or_expression
conditional_expression:logical_or_expression COND expression COLON conditional_expression

assignment_expression:conditional_expression
assignment_expression:unary_expression assignment_operator assignment_expression

assignment_operator:ASSIGN
assignment_operator:MUL_ASSIGN
assignment_operator:DIV_ASSIGN
assignment_operator:MOD_ASSIGN
assignment_operator:ADD_ASSIGN
assignment_operator:SUB_ASSIGN
assignment_operator:LEFT_ASSIGN
assignment_operator:RIGHT_ASSIGN
assignment_operator:AND_ASSIGN
assignment_operator:XOR_ASSIGN
assignment_operator:OR_ASSIGN

expression:assignment_expression
expression:expression COMMA assignment_expression

constant_expression:conditional_expression

declaration:declaration_specifiers SEMICOLON
declaration:declaration_specifiers init_declarator_list SEMICOLON

declaration_specifiers:storage_class_specifier
declaration_specifiers:storage_class_specifier declaration_specifiers
declaration_specifiers:type_specifier
declaration_specifiers:type_specifier declaration_specifiers
declaration_specifiers:type_qualifier
declaration_specifiers:type_qualifier declaration_specifiers

init_declarator_list:init_declarator
init_declarator_list:init_declarator_list COMMA init_declarator

init_declarator:declarator
init_declarator:declarator ASSIGN initializer

storage_class_specifier:TYPEDEF
storage_class_specifier:EXTERN
storage_class_specifier:STATIC
storage_class_specifier:AUTO
storage_class_specifier:REGISTER

type_specifier:VOID
type_specifier:CHAR
type_specifier:SHORT
type_specifier:INT
type_specifier:LONG
type_specifier:FLOAT
type_specifier:DOUBLE
type_specifier:SIGNED
type_specifier:UNSIGNED
type_specifier:struct_or_union_specifier
type_specifier:enum_specifier
type_specifier:TYPE_NAME

struct_or_union_specifier:struct_or_union IDENTIFIER L_CURLY struct_declaration_list R_CURLY
struct_or_union_specifier:struct_or_union L_CURLY struct_declaration_list R_CURLY
struct_or_union_specifier:struct_or_union IDENTIFIER

struct_or_union:STRUCT
struct_or_union:UNION

struct_declaration_list:struct_declaration
struct_declaration_list:struct_declaration_list struct_declaration

struct_declaration:specifier_qualifier_list struct_declarator_list SEMICOLON

specifier_qualifier_list:type_specifier specifier_qualifier_list
specifier_qualifier_list:type_specifier
specifier_qualifier_list:type_qualifier specifier_qualifier_list
specifier_qualifier_list:type_qualifier

struct_declarator_list:struct_declarator
struct_declarator_list:struct_declarator_list COMMA struct_declarator

struct_declarator:declarator
struct_declarator:COLON constant_expression
struct_declarator:declarator COLON constant_expression

enum_specifier:ENUM L_CURLY enumerator_list R_CURLY
enum_specifier:ENUM IDENTIFIER L_CURLY enumerator_list R_CURLY
enum_specifier:ENUM IDENTIFIER

enumerator_list:enumerator
enumerator_list:enumerator_list COMMA enumerator

enumerator:IDENTIFIER
enumerator:IDENTIFIER ASSIGN constant_expression

type_qualifier:CONST
type_qualifier:VOLATILE

declarator:pointer direct_declarator
declarator:direct_declarator

direct_declarator:IDENTIFIER
direct_declarator:L_PAREN declarator R_PAREN
direct_declarator:direct_declarator L_BRACK constant_expression R_BRACK
direct_declarator:direct_declarator L_BRACK R_BRACK
direct_declarator:direct_declarator L_PAREN parameter_type_list R_PAREN
direct_declarator:direct_declarator L_PAREN identifier_list R_PAREN
direct_declarator:direct_declarator L_PAREN R_PAREN

pointer:MUL
pointer:MUL type_qualifier_list
pointer:MUL pointer
pointer:MUL type_qualifier_list pointer

type_qualifier_list:type_qualifier
type_qualifier_list:type_qualifier_list type_qualifier

parameter_type_list:parameter_list
parameter_type_list:parameter_list COMMA ELLIPSIS

parameter_list:parameter_declaration
parameter_list:parameter_list COMMA parameter_declaration

parameter_declaration:declaration_specifiers declarator
parameter_declaration:declaration_specifiers abstract_declarator
parameter_declaration:declaration_specifiers

identifier_list:IDENTIFIER
identifier_list:identifier_list COMMA IDENTIFIER

type_name:specifier_qualifier_list
type_name:specifier_qualifier_list abstract_declarator

abstract_declarator:pointer
abstract_declarator:direct_abstract_declarator
abstract_declarator:pointer direct_abstract_declarator

direct_abstract_declarator:L_PAREN abstract_declarator R_PAREN
direct_abstract_declarator:L_BRACK R_BRACK
direct_abstract_declarator:L_BRACK constant_expression R_BRACK
direct_abstract_declarator:direct_abstract_declarator L_BRACK R_BRACK
direct_abstract_declarator:direct_abstract_declarator L_BRACK constant_expression R_BRACK
direct_abstract_declarator:L_PAREN R_PAREN
direct_abstract_declarator:L_PAREN parameter_type_list R_PAREN
direct_abstract_declarator:direct_abstract_declarator L_PAREN R_PAREN
direct_abstract_declarator:direct_abstract_declarator L_PAREN parameter_type_list R_PAREN

initializer:assignment_expression
initializer:L_CURLY initializer_list R_CURLY
initializer:L_CURLY initializer_list COMMA R_CURLY

initializer_list:initializer
initializer_list:initializer_list COMMA initializer

statement:labeled_statement
statement:compound_statement
statement:expression_statement
statement:selection_statement
statement:iteration_statement
statement:jump_statement

labeled_statement:IDENTIFIER COLON statement
labeled_statement:CASE constant_expression COLON statement
labeled_statement:DEFAULT COLON statement

compound_statement:L_CURLY R_CURLY
compound_statement:L_CURLY statement_list R_CURLY
compound_statement:L_CURLY declaration_list R_CURLY
compound_statement:L_CURLY declaration_list statement_list R_CURLY

declaration_list:declaration
declaration_list:declaration_list declaration

statement_list:statement
statement_list:statement_list statement

expression_statement:SEMICOLON
expression_statement:expression SEMICOLON

selection_statement:IF L_PAREN expression R_PAREN compound_statement
selection_statement:IF L_PAREN expression R_PAREN compound_statement ELSE compound_statement
selection_statement:SWITCH L_PAREN expression R_PAREN compound_statement

iteration_statement:WHILE L_PAREN expression R_PAREN statement
iteration_statement:DO statement WHILE L_PAREN expression R_PAREN SEMICOLON
iteration_statement:FOR L_PAREN expression_statement expression_statement R_PAREN statement
iteration_statement:FOR L_PAREN expression_statement expression_statement expression R_PAREN statement

jump_statement:GOTO IDENTIFIER SEMICOLON
jump_statement:CONTINUE SEMICOLON
jump_statement:BREAK SEMICOLON
jump_statement:RETURN SEMICOLON
jump_statement:RETURN expression SEMICOLON

translation_unit:external_declaration
translation_unit:translation_unit external_declaration

external_declaration:function_definition
external_declaration:declaration

function_definition:declaration_specifiers declarator declaration_list compound_statement
function_definition:declaration_specifiers declarator compound_statement
function_definition:declarator declaration_list compound_statement
function_definition:declarator compound_statement